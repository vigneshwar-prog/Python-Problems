1. Problem Title
	Spring interlaping pattern
2. Problem Content
	Two Matrix will be given, your task is to print the desired pattern as the output
3. Boundary Conditions

4. Input Format
First line containes N value
Matrix1 input with n rows and n columns
Matrix2 input with n rows and n columns

5. Output Format
print the pattern in a single row

6. 2 Samples with Input    and Output and in those 2, 1 sample must be explained
5
1 2 3 4 5
6 7 8 9 10
11 12 13 14 15
16 17 18 19 20
21 22 23 24 25

26 27 28 29 30
31 32 33 34 35
36 37 38 39 40
41 42 43 44 45 
46 47 48 49 50

Output:
1 2 3 4 5 26 27 28 29 30 10 15 20 25 35 40 45 50 24 23 22 21 49 48 47 46 16 11 6 41 36 31 7 8 9 32 33 34 14 19 39 44 18 17 43 42 12 37 13 38 

7. 5 Private Test Cases

8. Execution Time Limit

9. Solution
n=int(input())
m1=[list(map(int,input().split())) for i in range(n)]
m2=[list(map(int,input().split())) for i in range(n)]
r=n
c=n
k=0
l=0
while(k<r and l<c):
   
    for i in range(l,c):
        print(m1[k][i],end=" ")
   
    for i in range(l,c):
        print(m2[k][i],end=" ")
   
    k+=1
   
    for i in range(k,r):
        print(m1[i][c-1],end=" ")
   
    for i in range(k,r):
        print(m2[i][c-1],end=" ")
    c-=1
   
    if k<r:
        for i in range(c-1,l-1,-1):
            print(m1[r-1][i],end=" ")
       
        for i in range(c-1,l-1,-1):
            print(m2[r-1][i],end=" ")
        r-=1
       
    if l<c:
        for i in range(r-1,k-1,-1):
            print(m1[i][l],end=" ")
       
        for i in range(r-1,k-1,-1):
            print(m2[i][l],end=" ")
        l+=1
